@font-face {
  font-family: Rubik;
  src: url("fonts/Rubik.ttf");
}

body {
  --background: hsl(190, 40%, 30%);
  --color-light: hsl(150, 100%, 75%);
  --color-dark: hsl(190, 38%, 18%);
  --gray-dark: #333;
  --gray: #4d4d4d;
  --bad: rgb(255, 106, 125);

  background: var(--background);
  color: white;
  font-family: monospace;
  margin: 10px;
  cursor: default;
  user-select: none;
}

h1 {
  margin: 0;
  font-family: "Rubik";
}

button {
  outline: none;
  border-radius: 5px;
  padding: 3px;
  border: none;
  background-color: var(--color-light);
  color: var(--gray-dark);
  font: inherit;
  text-overflow: ellipsis;
  cursor: pointer;
}
button:enabled:hover {
  background-color: white;
}

.interface {
  display: block;
}

.bottom-container {
  display: flex;
  position: fixed;
  top: 160px;
  right: 0;
  left: 0;
  bottom: 0;
  margin: 10px;
}

/*
    INPUT
*/
input {
  outline: none;
  border-radius: 5px;
  padding: 3px;
  border: none;
  background-color: var(--gray-dark);
  color: inherit;
  font: inherit;
}
input:focus {
  background-color: var(--gray);
}
*::selection {
  background-color: var(--color-light);
  border-radius: 2px;
}
input:read-only {
  direction: rtl;
}

/*
    SETTINGS
*/
.settings {
  background-color: var(--gray);
  padding: 5px;
  border: 1px dashed white;
}

.setting {
  margin: 2px;
}

.setting.single-button {
  display: inline-flex;
  align-items: baseline;
}
.setting.single-button input {
  border-radius: 5px 0 0 5px;
  margin-left: 5px;
  width: 250px;
}
.setting.single-button button {
  border-radius: 0 5px 5px 0;
}

.directories {
  padding: 5px 20px;
}

.directory:hover button {
  color: white;
}
.directory input {
  min-width: 50px;
}

.directory.loading {
  opacity: 60%;
}
.directory.loading button {
  display: none;
}

button.remove {
  font-weight: bold;
  background: none;
  color: transparent;
}
button.remove:hover {
  background: none;
  color: var(--bad);
}

/*
    TASKS
*/
.task-container {
  position: absolute;
  display: block;
  width: 150px;
  outline: 1px solid white;

  padding: 5px;
  background-color: var(--gray);
  bottom: 0;
  right: 0;
  top: 0;
}

.task {
  width: auto;
  background-color: var(--gray-dark);
}

.task:not(:nth-child(1)) {
  opacity: 60%;
}

.task h2 {
  font-size: medium;
  font-weight: normal;
  margin: 0;
  padding: 5px;
  text-overflow: ellipsis;
  overflow: hidden;
}

/*
    FILES
*/
.border {
    display: block;
    z-index: 10;
    height: calc(100% - 2px);
    border: 1px solid white;
    left: -1px;
    position: absolute;
    bottom: 0px;
    pointer-events: none;
    right: 175px;
}
.file-container {
  border-collapse: separate;
  border-spacing: 0;
  background-color: var(--gray);
  display: table-row-group;
  overflow-y: auto;
  width: calc(100% - 175px);
}
.file-container::-webkit-scrollbar {
  display: none;
}
.file-container td, th {
  padding: 5px;
  width: 500px;
}
.file-container td {
  /* For cells, apply the border to one of each side only (right but not left, bottom but not top) */
  border-bottom: 1px solid;
  border-right: 1px solid;
}
/* .file-container tr:last-child td {
  border-bottom: 0;
} */
.file-container th {
  position: sticky;
  top: 0;
  z-index: 2;
  background-color: var(--gray-dark);
  /* Apply both top and bottom borders to the <th> */
  border-bottom: 1px solid;
  border-right: 1px solid;
}
.file-container tr {
  background-color: var(--gray-dark);
}
.file-container th:last-child,
.file-container td:last-child {
  /* Apply a left border on the first <td> or <th> in a row */
  border-right: none;
}

.file {
  cursor: default;
}
.file:hover {
  background-color: var(--color-dark);
}
.file.selected {
  background-color: blueviolet;
}

.file td {
  max-width: 100px;
  overflow: hidden;
  text-overflow: ellipsis;
}

/*
    PROGRESS
*/
.progressbar {
  height: 2px;
  background-color: var(--background);
}

.progress {
  background-color: var(--color-light);
  width: 50%;
  height: 100%;
}